
services:

  # Database
  database:
    image: mysql:8.2
    container_name: resetlytics_database
    restart: always #unless-stopped
    environment: 
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysql", "-h", "localhost", "-u", "root", "-ps${DATABASE_ROOT_PASSWORD}", "-e", "SELECT 1"]
      interval: 1m30s
      timeout: 30s
      retries: 10 
    env_file:
      - ./backend/resetlytics/.env.prod
    volumes:
      - mysql-data:/var/lib/mysql

  # Backend (Django with Gunicorn server)
  backend:
    container_name: resetlytics_backend
    build: ./backend
    volumes:
      - .:/backend  
    expose:
      - 8000
    ports:
      - "8000:8000"
    env_file:
      - ./backend/resetlytics/.env.prod
    depends_on:
      - database
        #  condition: service_healthy

  
  # Frontend (Next.js)
  frontend:
    container_name: resetlytics_frontend
    build: ./frontend
    depends_on:
      - backend

  # Nginx Reverse Proxy with TLS
  nginx:
    image: nginx:1.25
    ports:
      - "80:80"
      - "443:443" # check this one
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl/:/etc/nginx/ssl/ # make sure to put cert and key in ./ssl
    depends_on:
      - backend
      - frontend

# Define named volumes for persistence
volumes:
  mysql-data:
